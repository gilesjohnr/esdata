[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John R Giles. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Giles J (2024). esdata: Tools processing environmental sampling data. R package version 0.0.1, https://github.com/gilesjohnr/esdata.","code":"@Manual{,   title = {esdata: Tools for processing environmental sampling data},   author = {John R Giles},   year = {2024},   note = {R package version 0.0.1},   url = {https://github.com/gilesjohnr/esdata}, }"},{"path":"/index.html","id":"esdata-an-r-package-for-processing-environmental-sampling-data","dir":"","previous_headings":"","what":"Tools for processing environmental sampling data","title":"Tools for processing environmental sampling data","text":"package provides reproducible functions parsing compiling data sets measure infectious disease burden using Environmental Sampling (ES) methods. tools developed specifically epidemiological surveillance studies multiple pathogens locations Dhaka, Bangladesh Karachi, Pakistan. However, functions generalize applications provided use data formats. package currently development maintained John Giles (@gilesjohnr), details data models .","code":""},{"path":"/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Tools for processing environmental sampling data","text":"tools intended heavy lifting combining data multiple sources : Data .eds .xls format exported Applied Biosystems qPCR Systems using QuantStudio software. Data .xlsx format containing measurements Aquaread water monitoring instruments Geolocated climate variables","code":""},{"path":"/index.html","id":"models","dir":"","previous_headings":"","what":"Models","title":"Tools for processing environmental sampling data","text":"package also includes methods calculating basic quantities qPCR data : Viral load Delta delta Ct Basic stats cross correlations","code":""},{"path":[]},{"path":"/index.html","id":"id_1-check-dependencies","dir":"","previous_headings":"Installation","what":"1) Check dependencies","title":"Tools for processing environmental sampling data","text":"data parsing functions package depend Python 3 Java. check install can try following: Download Python 3 check current installation : Download Java check current installation :","code":"user@computer:~$ python3 --version Python 3.11.5 user@computer:~$ java --version java 21.0.2 2024-01-16 LTS Java(TM) SE Runtime Environment (build 21.0.2+13-LTS-58) Java HotSpot(TM) 64-Bit Server VM (build 21.0.2+13-LTS-58, mixed mode, sharing)"},{"path":"/index.html","id":"id_2-install-from-github","dir":"","previous_headings":"Installation","what":"2) Install from Github","title":"Tools for processing environmental sampling data","text":"Use devtools package install development version esdata GitHub repository. R version >= 3.5.0 recommended.","code":"install.packages('devtools') devtools::install_github(\"gilesjohnr/esdata\", dependencies=TRUE)"},{"path":"/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Tools for processing environmental sampling data","text":"general questions, contact John Giles (john.giles@gatesfoundation.org) /Jillian Gauld (jillian.gauld@gatesfoundation.org). Note software made available Creative Commons license developed specific environmental sampling applications therefore may generalize perfectly settings.","code":""},{"path":"/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Tools for processing environmental sampling data","text":"work developed Institute Disease Modeling support funded research grants made Bill & Melinda Gates Foundation.","code":""},{"path":"/reference/apply_delta_delta_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"function calculate delta delta Ct metric applicable observations data.frame applying calc_delta_delta_ct function. data.frame must following columns: 'location_id', 'sample_date', 'target_name', 'ct_value'. relevant target_names associated reference_names must provided. result data.frame containing 'delta_delta_ct' column can merge source data.frame.","code":""},{"path":"/reference/apply_delta_delta_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"","code":"apply_delta_delta_ct(   df,   target_names,   reference_names,   amplification_efficiency = 1 )"},{"path":"/reference/apply_delta_delta_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"df data.frame class esdata. target_names Character vector giving names target genes. reference_names Character vector giving names reference genes associated target gene. amplification_efficiency scalar 0 1 giving assumed PCR amplification efficiency samples equation. Defaults 1, assumes 100% efficiency.","code":""},{"path":"/reference/apply_delta_delta_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"data.frame","code":""},{"path":"/reference/apply_delta_delta_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"","code":"if (FALSE) {  df_example <- data.frame(location_id = c(rep(1,9), rep(2,9), rep(3,9)),                          sample_date = as.Date(rep(c(rep('2024-01-01',3), rep('2024-01-02',3), rep('2024-01-03',3)), 3)),                          target_name = rep(c('gene1', 'gene2', 'housekeeping'), 9),                          ct_value = as.numeric(runif(27, min=5, max=40)))  df_result <- apply_delta_delta_ct(df = df_example,                                   target_names = c('gene1', 'gene2'),                                   reference_names = c('housekeeping', 'housekeeping'),                                   amplification_efficiency = 0.95)  merge(df_example, df_result, by=c('location_id', 'sample_date', 'target_name'), all.x=TRUE)  }"},{"path":"/reference/calc_delta_delta_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate delta delta Ct — calc_delta_delta_ct","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"function calculates relative gene expression using delta delta Ct method described https://www.sciencedirect.com/science/article/abs/pii/S1046202301912629?via%3DihubLivak & Schmittgen (2001).","code":""},{"path":"/reference/calc_delta_delta_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"","code":"calc_delta_delta_ct(   ct_target_t,   ct_reference_t,   ct_target_t0,   ct_reference_t0,   amplification_efficiency = 1 )"},{"path":"/reference/calc_delta_delta_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"ct_target_t scalar providing Ct value target gene observation time t ct_reference_t scalar providing Ct value reference gene observation time t ct_target_t0 scalar providing Ct value target gene reference observation time t=0 ct_reference_t0 scalar providing Ct value reference gene reference observation time t=0 amplification_efficiency scalar 0 1 giving assumed PCR amplification efficiency samples equation. Defaults 1, assumes 100% efficiency.","code":""},{"path":"/reference/calc_delta_delta_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"Scalar","code":""},{"path":"/reference/calc_delta_delta_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"","code":"if (FALSE) {  calc_delta_delta_ct(ct_target_t = 32.5,                     ct_reference_t = 25,                     ct_target_t0 = 34,                     ct_reference_t0 = 30,                     amplification_efficiency = 0.95)  }"},{"path":"/reference/calc_n_copies.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of target copies — calc_n_copies","title":"Calculate number of target copies — calc_n_copies","text":"function calculates quantitative value qPCR Ct value. Cycle threshold converted estimated number gene target copies (e.g. viral load viral pathogen) fitting log linear model standard curve data using model find point estimate provided Ct values.","code":""},{"path":"/reference/calc_n_copies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of target copies — calc_n_copies","text":"","code":"calc_n_copies(ct_values, target_names, standard_curves)"},{"path":"/reference/calc_n_copies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of target copies — calc_n_copies","text":"ct_values numeric vector giving Ct value observation. target_names character vector giving target names element 'ct_values'. standard_curves data.frame containing results standard curve dilution experiment. Elements 'target_names' must map either 'target_name_unique' 'target_name_concise'. See package data object standard_curves_dhaka template.","code":""},{"path":"/reference/calc_n_copies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of target copies — calc_n_copies","text":"Vector","code":""},{"path":"/reference/calc_n_copies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of target copies — calc_n_copies","text":"","code":"if (FALSE) {  compiled_tac <- read.csv('/Users/tac/compiled_tac.csv')  test <- calc_n_copies(ct_values = compiled_tac$ct_value,                       target_names = compiled_tac$target_name,                       standard_curves = standard_curves_dhaka)  compiled_tac$n_copies <- test  }"},{"path":"/reference/compile_aquaprobe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile aquaprobe data — compile_aquaprobe_data","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"function consumes .csv files produced parse_aquaprobe_xlsx compiles single data set.","code":""},{"path":"/reference/compile_aquaprobe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"","code":"compile_aquaprobe_data(path_in, path_out, verbose = TRUE)"},{"path":"/reference/compile_aquaprobe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"path_in full file path directory containing parsed .csv files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"/reference/compile_aquaprobe_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"data.frame","code":""},{"path":"/reference/compile_aquaprobe_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"","code":"if (FALSE) { compile_aquaprobe_data(path_in = \"/User/test/aquaprobe/raw/csv/input.csv\",                        path_out = \"/User/test/aquaprobe\") }"},{"path":"/reference/compile_tac_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile TAC data — compile_tac_data","title":"Compile TAC data — compile_tac_data","text":"function consumes .csv files produced parse_taq_eds parse_taq_xls compiles single data set. compiling, duplicated names corrected defined data key data set included package. Adjustments Ct values made using blank samples control contamination relevant RNA/DNA targets qPCR amplification controls.","code":""},{"path":"/reference/compile_tac_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile TAC data — compile_tac_data","text":"","code":"compile_tac_data(path_in, path_out, tau, key, verbose = TRUE)"},{"path":"/reference/compile_tac_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile TAC data — compile_tac_data","text":"path_in full file path directory containing parsed .csv files. path_out full file path location output files written. tau threshold Ct value amplification control. TAC, relevant amplification controls (e.g. MS2, PhHV) threshold, \"Undetermined\" responses can set threshold value. key data.frame containing mapping unique concise target names amplification controls. See esdata::key_dhaka template. verbose Logical indicating whether print messages. Default set TRUE.","code":""},{"path":"/reference/compile_tac_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile TAC data — compile_tac_data","text":"data.frame","code":""},{"path":"/reference/compile_tac_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile TAC data — compile_tac_data","text":"","code":"if (FALSE) { compile_tac_data(path_in = \"/User/test/rtac/raw/csv\",                  path_out = \"/User/test/rtac\",                  key = esdata::key_dhaka) }"},{"path":"/reference/convert_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Aquaprobe data and time to consistent date format — convert_date_time","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"function takes vector 'Date & Time' column Aquaprobe data, transforms consistent Date-class object. Note many dates column corrupted give NAs.","code":""},{"path":"/reference/convert_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"","code":"convert_date_time(x)"},{"path":"/reference/convert_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"x vector containing character strings 'Date & Time' column Aquaprobe data set","code":""},{"path":"/reference/convert_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"vector","code":""},{"path":"/reference/convert_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"","code":"if (FALSE) { convert_date_time(df$`Date & Time`) }"},{"path":"/reference/convert_dms_to_dd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"function takes character strings giving Latitude Longitude Aquaprobe .xlsx files, returns spatial coordinates Degree Minute Second (DMS) Decimal Degree (DD) formats.","code":""},{"path":"/reference/convert_dms_to_dd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"","code":"convert_dms_to_dd(x)"},{"path":"/reference/convert_dms_to_dd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"x vector containing character strings Latitude Longitude informal DMS format Dhaka aquaprobe .xlsx files.","code":""},{"path":"/reference/convert_dms_to_dd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"List DMS DD formats","code":""},{"path":"/reference/convert_dms_to_dd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"","code":"if (FALSE) { convert_dms_to_dd(df$Lat) }"},{"path":"/reference/dot-init_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a progress bar — .init_pb","title":"Initialize a progress bar — .init_pb","text":"wrapper function 'progress' package initialize default progress bar long loops","code":""},{"path":"/reference/dot-init_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a progress bar — .init_pb","text":"","code":".init_pb(x)"},{"path":"/reference/dot-init_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a progress bar — .init_pb","text":"x Integer giving length loop","code":""},{"path":"/reference/dot-init_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a progress bar — .init_pb","text":"","code":"if (FALSE) {      len <- 100      pb <- .init_pb(len)      for (i in 1:len) {           pb$tick()           Sys.sleep(0.01)           } }"},{"path":"/reference/key_dhaka.html","id":null,"dir":"Reference","previous_headings":"","what":"Master key for target names — key_dhaka","title":"Master key for target names — key_dhaka","text":"data serve key cross reference unique (sometimes duplicated) target names across Taqman cards appropriate concise target names, relevant control samples, whether include target compiled data set. key applies data collected Dhaka, Bangladesh, however, key may used template apllications studies well.","code":""},{"path":"/reference/key_dhaka.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Master key for target names — key_dhaka","text":"","code":"key_dhaka"},{"path":[]},{"path":"/reference/key_dhaka.html","id":"key-dhaka","dir":"Reference","previous_headings":"","what":"key_dhaka","title":"Master key for target names — key_dhaka","text":"data frame 4 columns: target_name_unique original target name found taqman array cards. May contain typos duplicates. target_name_concise associated concise target name typos duplicates removed. control amplification control target. MS2 RNA based targets PhHV DNA based targets. include Binary operator giving 1 targets included.","code":""},{"path":"/reference/logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean in log space — logmean","title":"Calculate the mean in log space — logmean","text":"function gives mean taken log-scale set numeric values. Values less equal zero ignored NA. Best suited values taken highly skewed distribution, Ct values often .","code":""},{"path":"/reference/logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean in log space — logmean","text":"","code":"logmean(x)"},{"path":"/reference/logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean in log space — logmean","text":"x vector containing numeric values","code":""},{"path":"/reference/logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean in log space — logmean","text":"Scalar","code":""},{"path":"/reference/logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean in log space — logmean","text":"","code":"if (FALSE) {  logmean(c(24.3, 10.3, 40, NA, 0, -1, 0.05))  }"},{"path":"/reference/parse_aquaprobe_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"function takes .xlsx file path (vector file paths) extracts contents individual csv files containing raw data.","code":""},{"path":"/reference/parse_aquaprobe_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"","code":"parse_aquaprobe_xlsx(path_in, path_out, verbose = TRUE)"},{"path":"/reference/parse_aquaprobe_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"path_in full file path directory containing .xlsx files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"/reference/parse_aquaprobe_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"data.frame","code":""},{"path":"/reference/parse_aquaprobe_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"","code":"if (FALSE) { parse_aquaprobe_xlsx(path_in = c(\"/User/test/dir1\", \"/Users/test/dir2\"),                      path_out = \"/User/test\") }"},{"path":"/reference/parse_tac_eds.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Taqman .eds files — parse_tac_eds","title":"Parse Taqman .eds files — parse_tac_eds","text":"function takes directory .eds files produced QuantStudio software extracts contents xml txt files containing raw data experiment metadata.","code":""},{"path":"/reference/parse_tac_eds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Taqman .eds files — parse_tac_eds","text":"","code":"parse_tac_eds(path_in, path_out = NULL)"},{"path":"/reference/parse_tac_eds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Taqman .eds files — parse_tac_eds","text":"path_in full file path directory containing .eds files. path_out full file path location output files written.","code":""},{"path":"/reference/parse_tac_eds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Taqman .eds files — parse_tac_eds","text":"","code":"if (FALSE) { parse_tac_eds(path_in = \"/User/test/dir1\",               path_out = \"/User/test\") }"},{"path":"/reference/parse_tac_xls.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Taqman .xls files — parse_tac_xls","title":"Parse Taqman .xls files — parse_tac_xls","text":"function takes directory .xls files produced QuantStudio software extracts contents individual csv files containing raw data.","code":""},{"path":"/reference/parse_tac_xls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Taqman .xls files — parse_tac_xls","text":"","code":"parse_tac_xls(path_in, path_out, verbose = TRUE)"},{"path":"/reference/parse_tac_xls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Taqman .xls files — parse_tac_xls","text":"path_in full file path directory containing .xls files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"/reference/parse_tac_xls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Taqman .xls files — parse_tac_xls","text":"data.frame","code":""},{"path":"/reference/parse_tac_xls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Taqman .xls files — parse_tac_xls","text":"","code":"if (FALSE) { parse_tac_xls(path_in = c(\"/User/test/dir1\", \"/Users/test/dir2\"),               path_out = \"/User/test\") }"},{"path":"/reference/standard_curves_dhaka.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard curve data for Dhaka analyses — standard_curves_dhaka","title":"Standard curve data for Dhaka analyses — standard_curves_dhaka","text":"data provide standard curve relationship viral load qPCR Ct value. data pertain analyses run samples Dhaka, Bangladesh. However, format data can replicated modeling viral load data sources.","code":""},{"path":"/reference/standard_curves_dhaka.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard curve data for Dhaka analyses — standard_curves_dhaka","text":"","code":"standard_curves_dhaka"},{"path":[]},{"path":"/reference/standard_curves_dhaka.html","id":"standard-curves-dhaka","dir":"Reference","previous_headings":"","what":"standard_curves_dhaka","title":"Standard curve data for Dhaka analyses — standard_curves_dhaka","text":"data frame 4 columns: target_name_unique original target name found taqman array cards. May contain typos duplicates. target_name_concise associated concise target name typos duplicates removed. ct_value_1 first measured Ct value attained particular viral load dilution. ct_value_2 second measured Ct value attained particular viral load dilution. quantity number viral copies particular dilution.","code":""}]
